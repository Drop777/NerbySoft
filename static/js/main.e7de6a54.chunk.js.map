{"version":3,"sources":["store/index.js","Components/RegistrationForm/RegistrationForm.js","Components/RegistrationForm/index.js","Components/LoginForm/LoginForm.js","Components/LoginForm/index.js","Components/TodoItem/TodoItem.js","Components/TodoItem/index.js","Components/TodoList/TodoList.js","Components/TodoList/index.js","Components/App/App.js","Components/App/index.js","serviceWorker.js","index.js"],"names":["ACTION_TYPES","initialState","localStorage","JSON","parse","users","currentUser","isLogged","store","createStore","state","action","console","log","type","payload","find","user","login","userLogin","password","userPassword","todos","map","name","filter","todo","id","todoTitle","editedText","selected","checked","item","preperedTodo","subscribe","stringify","getState","RegistrationForm","userName","userNameError","userLoginError","isExist","userPasswordError","handeleChangeName","event","target","value","setState","trimRight","handeleChangeLogin","preventDefault","handeleChangePasword","handleSubmit","props","register","history","push","this","className","onSubmit","TextField","error","label","onChange","margin","variant","Button","color","style","marginTop","React","Component","connectedForm","connect","dispatch","newLogin","newPass","newName","LoginForm","findLogin","undefined","findPassword","match","handleLogin","connectedLoginForm","Todoitem","isEditing","handleEditedText","replace","activateEditing","title","addNewText","editTextTodo","handelCheck","selectTodo","deleteTodo","viewStyle","editStyle","minWidth","maxWidth","display","Paper","Checkbox","inputProps","Typography","component","onDoubleClick","onClick","connectedTodoItem","todoId","editText","TodoItem","TodosUser","currentIndex","hasError","userLoginForshare","handleChange","trimLeft","addTodo","newTodo","Math","random","prevState","handeleSelect","share","shareTodo","unselectTodo","prepereUsers","viewshare","some","justifyContent","marginLeft","marginRight","Card","CardContent","Grid","container","justify","alignItems","Avatar","alt","src","width","height","gutterBottom","key","FormControl","Select","MenuItem","disabled","connectedTodosUser","fromUser","TodoList","App","handelLogin","handleLogout","AppBar","position","Toolbar","to","textDecoration","path","render","connetedApp","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e7de6a54.chunk.js","sourcesContent":["import { createStore } from 'redux';\n\nconst ACTION_TYPES = {\n    REGISTER_USER: 'REGISTER_USER',\n    LOGIN_USER: 'LOGIN_USER',\n    ADD_TODO: 'ADD_TODO',\n    DELETE_TODO: 'DELETE_TODO',\n    ADD_EDIT_TEXT: 'ADD_EDIT_TEXT',\n    SELECT_TODO: 'SELECT_TODO',\n    SHARE_TODO: 'SHARE_TODO',\n    UNSELECT_TODO: 'UNSELECT_TODO',\n    LOGIN: 'LOGIN',\n    LOGOUT: 'LOGOUT',\n};\n\nexport const register = (newLogin, newPass, newName) => {\n    const user = {\n        name: newName,\n        login: newLogin,\n        password: newPass,\n        todos: [],\n    };\n\n    return ({\n        type: 'REGISTER_USER',\n        payload: {...user},\n    })\n    \n}\n\nexport const login = (login, password) => (\n    {\n        type: 'LOGIN_USER',\n        payload: {\n            userLogin: login,\n            userPassword: password,\n        },\n    }\n);\n\nexport const addTodo = todo => (\n    {\n        type: 'ADD_TODO',\n        payload: todo,\n    }\n);\n\nexport const deleteTodo = todoId => (\n    {\n        type: 'DELETE_TODO',\n        payload: todoId,\n    }\n);\n\nexport const editTextTodo = (editedText, id) => (\n    {\n        type: 'ADD_EDIT_TEXT',\n        payload: {\n            id,\n            editedText\n        }\n    }\n);\n\nexport const selectTodo = (id, checked) => (\n    {\n        type: 'SELECT_TODO',\n        payload: {\n            id,\n            checked\n        }\n    }\n);\n\nexport const unselectTodo = () => (\n    {\n        type: 'UNSELECT_TODO',\n    }\n);\n\nexport const handleLogin = () => (\n    {\n        type: 'LOGIN',\n    }\n)\n\nexport const handleLogout = () => (\n    {\n        type: 'LOGOUT',\n    }\n)\n\nexport const shareTodo = (login, todo, fromUser) => {\n    const preperedTodo = todo.map(item => (\n        {\n            ...item,\n            todoTitle: item.todoTitle + ' shared from ' + fromUser,\n            selected: false,\n        }\n    ));\n\n    return  ({\n        type: 'SHARE_TODO',\n        payload: {\n            login,\n            preperedTodo\n        }\n    })\n};\n\n\nconst initialState = localStorage['redux-store'] \n    ? JSON.parse(localStorage['redux-store']) \n    : {\n        users: [],\n        currentUser: {},\n         isLogged: false,\n    }\n\nconst reducer = (state = initialState, action) => {\n    console.log(state);\n    console.log(action);\n    switch (action.type) {\n        case ACTION_TYPES.REGISTER_USER:\n            return {\n                ...state,\n                users: [...state.users, action.payload],\n            };\n        case ACTION_TYPES.LOGIN_USER:\n            return {\n                ...state,\n                currentUser: state.users.find(user => user.login === action.payload.userLogin && user.password === action.payload.userPassword),\n            }\n        case ACTION_TYPES.ADD_TODO:\n            return {\n                ...state,\n                currentUser: {\n                    ...state.currentUser,\n                    todos: [...state.currentUser.todos, action.payload]\n                },\n                users: [...state.users].map(user => {\n                    if (user.name === state.currentUser.name) {\n                        user.todos = [...user.todos, action.payload]\n                    }\n                    return user;\n                }),\n            }\n        case ACTION_TYPES.DELETE_TODO: {\n            return {\n                ...state,\n                currentUser: {\n                    ...state.currentUser,\n                    todos: [...state.currentUser.todos].filter(todo => todo.id !== action.payload)\n                },\n                users: [...state.users].map(user => {\n                    if (user.name === state.currentUser.name) {\n                        user.todos = [...user.todos].filter(todo => todo.id !== action.payload)\n                    }\n                    return user;\n                }),\n            }\n        }\n        case ACTION_TYPES.ADD_EDIT_TEXT: {\n            return {\n                ...state,\n                currentUser: {\n                    ...state.currentUser,\n                    todos: [...state.currentUser.todos].map(todo => {\n                        if (todo.id === action.payload.id) {\n                            todo.todoTitle = action.payload.editedText\n                        }\n                        return todo;\n                    })\n                },\n            }\n        }\n        case ACTION_TYPES.SELECT_TODO: \n            return {\n                ...state,\n                currentUser: {\n                    ...state.currentUser,\n                    todos: [...state.currentUser.todos].map(todo => {\n                        if (todo.id === action.payload.id) {\n                            todo.selected = action.payload.checked\n                        }\n                        return todo;\n                    })\n                }\n            }\n        case ACTION_TYPES.UNSELECT_TODO: \n            return {\n                ...state,\n                currentUser: {\n                    ...state.currentUser,\n                    todos: [...state.currentUser.todos].map(item => (\n                        {\n                            ...item,\n                            selected: false,\n                        }\n                    ))\n                },\n                users: [...state.users].map(user => {\n                    if (user.name === state.currentUser.name) {\n                      return (\n                          {\n                                ...user,\n                                todos: [...user.todos].map(todo => (\n                                    {\n                                        ...todo,\n                                        selected: false,\n                                    }\n                                ))\n                          }\n                      );\n                    }\n                    return user;\n                }),\n            }\n        case ACTION_TYPES.SHARE_TODO: \n            return {\n                ...state,\n                users: [...state.users].map(user => {\n                    if (user.login === action.payload.login) {\n                        user.todos = [...user.todos, ...action.payload.preperedTodo]\n                    }\n                    return user;\n                }),\n            }\n        case ACTION_TYPES.LOGIN: {\n            return {\n                ...state,\n                 isLogged: true,\n            }\n        }\n        case ACTION_TYPES.LOGOUT: {\n            return {\n                ...state,\n                 isLogged: false,\n            }\n        }\n        default: \n            return state;\n    }\n    \n};\n\nconst store = createStore(reducer);\n\nstore.subscribe(() => {\n    localStorage['redux-store'] = JSON.stringify(store.getState());\n})\n\nexport default store;","import React from 'react';\nimport './RegistrationForm.css';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nclass RegistrationForm extends React.Component {\n    state = {\n        userName: '',\n        userLogin: '',\n        userPassword: '',\n\n        userNameError: false,\n        userLoginError: false,\n        isExist: false,\n        userPasswordError: false,\n    }\n\n    handeleChangeName = (event) => {\n        const { target } = event;\n        console.log(target.value);\n        this.setState({\n            userName: target.value.trimRight(),\n        });\n    };\n\n    handeleChangeLogin = (event) => {\n        event.preventDefault();\n        const { target } = event;\n        console.log(target.value);\n        this.setState({\n            userLogin: target.value.trimRight(),\n        });\n    };\n\n    handeleChangePasword = (event) => {\n        const { target } = event;\n        console.log(target.value);\n        this.setState({\n            userPassword: target.value.trimRight(),\n        });\n    };\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n\n        const {\n            userLogin,\n            userPassword,\n            userName,\n        } = this.state;\n        const { register, users } = this.props;\n\n        if (userName === '' && userLogin === '' && userPassword === '') {\n            this.setState({\n                userNameError: true,\n                userLoginError: true,\n                userPasswordError: true,\n            });\n        } else if (userLogin === '') {\n            this.setState({\n                userLoginError: true,\n            });\n        } else if (userPassword === '') {\n            this.setState({\n                userPasswordError: true,\n            });\n        } else if (users.find(user => user.login === userLogin)) {\n            this.setState({\n                isExist: true,\n            })\n        } else {\n            const { history } = this.props;\n            this.setState({\n                userName: '',\n                userLogin: '',\n                userPassword: '',\n\n                userNameError: false,\n                userLoginError: false,\n                isExist: false,\n                userPasswordError: false,\n            });\n            register(userLogin, userPassword, userName);\n            history.push(`/login`)\n        }\n    }\n\n    render() {\n        const {\n            userLogin,\n            userPassword,\n            userName,\n            userNameError,\n            userLoginError,\n            userPasswordError,\n            isExist\n        } = this.state;\n\n        return (\n            <div className=\"container\">\n                <p className=\"form-title\">Registration</p>\n                <form\n                    className=\"form\"\n                    onSubmit={(event) => this.handleSubmit(event)}\n                >\n                    <div className=\"form-input\">\n                        <TextField\n                            error={userNameError}\n                            id=\"outlined-name\"\n                            label=\"Name\"\n                            value={userName}\n                            onChange={this.handeleChangeName}\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                        />\n                        <TextField\n                            error={userLoginError}\n                            id=\"outlined-name\"\n                            label=\"Login\"\n                            value={userLogin}\n                            onChange={this.handeleChangeLogin}\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                        />\n                        {isExist && (\n                            <small>Yze est</small>\n                        )}\n                        <TextField\n                            error={userPasswordError}\n                            id=\"outlined-name\"\n                            label=\"Password\"\n                            type=\"password\"\n                            value={userPassword}\n                            onChange={this.handeleChangePasword}\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                        />\n                        <Button variant=\"contained\" type=\"submit\" color=\"primary\" className=\"submit-button\" style={{ marginTop: 10 }}>\n                            Register\n                        </Button>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n};\n\nexport default RegistrationForm;","import { connect } from 'react-redux';\nimport RegistrationForm from './RegistrationForm';\nimport { register } from '../../store/index';\n\nconst mapMethodsToProps = dispatch => ({\n    register: (newLogin, newPass, newName) => dispatch(register(newLogin, newPass, newName))\n});\n\nconst mapStateToProps = state => ({\n    users: state.users,\n});\n\nconst connectedForm = connect(mapStateToProps, mapMethodsToProps)(RegistrationForm);\n\nexport {\n    connectedForm as RegistrationForm\n}","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nclass LoginForm extends React.Component {\n    state = {\n        userLogin: '',\n        userPassword: '',\n\n        userLoginError: false,\n        userPasswordError: false,\n    };\n\n    handeleChangeLogin = (event) => {\n        event.preventDefault();\n        const { target } = event;\n        console.log(target.value);\n        this.setState({\n            userLogin: target.value.trimRight(),\n        });\n    }\n\n    handeleChangePasword = (event) => {\n        const { target } = event;\n        console.log(target.value);\n        this.setState({\n            userPassword: target.value.trimRight(),\n        });\n    };\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        const { userPassword, userLogin } = this.state;\n        const { users, login } = this.props;\n\n        const findLogin = users.find(user => user.login === userLogin) === undefined\n            ? undefined\n            : users.find(user => user.login === userLogin).login;\n\n\n        const findPassword = users.find(user => user.login === findLogin && user.password === userPassword) === undefined\n            ? undefined\n            : users.find(user => user.login === findLogin && user.password === userPassword).password;\n\n\n        if (findLogin === undefined) {\n            this.setState({\n                userLoginError: true,\n            });\n        } else if (findPassword === undefined) {\n            this.setState({\n                userLoginError: false,\n                userPasswordError: true,\n            });\n        } else {\n            const { match : { history}, handleLogin } = this.props;\n            console.log(history)\n            history.push(`/user/${findLogin}`);\n            this.setState({\n                userLogin: '',\n                userPassword: '',\n\n                userLoginError: false,\n                userPasswordError: false,\n            });\n            login(findLogin, findPassword);\n            handleLogin();\n        }\n    }\n\n    render() {\n        const { userLogin, userPassword, userLoginError, userPasswordError } = this.state;\n        return (\n            <div className=\"container\">\n                <p className=\"form-title\">Login</p>\n                <form\n                    onSubmit={(event) => this.handleSubmit(event)}\n                >\n                    <div className=\"form-input\">\n                        {userLoginError && (\n                            <small>User not found</small>\n                        )}\n                        {userPasswordError && (\n                            <small>Incorrect password</small>\n                        )}\n                        <TextField\n                            id=\"outlined-name\"\n                            label=\"Login\"\n                            value={userLogin}\n                            onChange={this.handeleChangeLogin}\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                        />\n                        <TextField\n                            type=\"password\"\n                            id=\"outlined-name\"\n                            label=\"Password\"\n                            value={userPassword}\n                            onChange={this.handeleChangePasword}\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                        />\n                        <Button variant=\"contained\" type=\"submit\" color=\"primary\" className=\"submit-button\" style={{ marginTop: 10 }}>\n                            Login\n                        </Button>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\n\nexport default LoginForm;","import { connect } from 'react-redux';\nimport LoginForm from './LoginForm';\nimport { login, handleLogin } from '../../store/index';\n\nconst mapStateToProps = state => ({\n    users: state.users,\n});\n\nconst mapMethodsToProps = dispatch => ({\n    handleLogin: () => dispatch(handleLogin()),\n    login: (userLogin, userPassword) => dispatch(login(userLogin, userPassword))\n});\n\n\nconst connectedLoginForm = connect(mapStateToProps, mapMethodsToProps)(LoginForm);\n\nexport {\n    connectedLoginForm as LoginForm\n}","import React from 'react';\nimport './TodoItem.css';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\nclass Todoitem extends React.Component {\n    state = {\n        editedText: '',\n        isEditing: false,\n    };\n\n    handleEditedText = ({ target: { value } }) => {\n        this.setState({\n            editedText: value.replace(/^\\s+/, ''),\n        });\n    }\n\n    activateEditing = (title) => {\n        this.setState(({ isEditing }) => ({\n            editedText: title,\n            isEditing: !isEditing,\n        }));\n    }\n\n    addNewText = (event) => {\n        event.preventDefault();\n\n        const { editTextTodo, todo: { id } } = this.props;\n        const { editedText } = this.state;\n        this.setState(({ isEditing }) => ({\n            isEditing: !isEditing,\n        }));\n\n        editTextTodo(editedText, id);\n    }\n\n    handelCheck = event => {\n        console.log(event)\n        const { todo, selectTodo } = this.props\n        const { target } = event;\n\n        selectTodo(todo.id, target.checked)\n\n    };\n\n    render() {\n        const { todo, deleteTodo, selected } = this.props;\n        const { isEditing, editedText } = this.state;\n        const viewStyle = {};\n        const editStyle = {\n            margin: 0,\n            minWidth: 500,\n            maxWidth: 750,\n        };\n    console.log(todo)\n    if(isEditing) {\n        viewStyle.display = 'none';\n    } else {\n    editStyle.display = 'none';\n}\n\nreturn (\n    <li>\n        <Paper style={viewStyle} className='list-item-form'>\n            <Checkbox\n                checked={selected}\n                onChange={(event) => this.handelCheck(event, todo.id)}\n                value=\"checkedB\"\n                color=\"primary\"\n                inputProps={{\n                    'aria-label': 'secondary checkbox',\n                }}\n            />\n            <Typography variant=\"h5\" component=\"h3\" onDoubleClick={() => this.activateEditing(todo.todoTitle)}>\n                {todo.todoTitle}\n            </Typography>\n            <Button variant=\"contained\" color=\"secondary\" onClick={() => deleteTodo(todo.id)} >\n                Delete\n                    </Button>\n        </Paper>\n        <form onSubmit={(event) => this.addNewText(event)}>\n            <TextField\n                style={editStyle}\n                id=\"standard-name\"\n                label=\"Edit\"\n                value={editedText}\n                onChange={(event) => this.handleEditedText(event)}\n                margin=\"normal\"\n            />\n        </form>\n    </li>\n)\n    }\n}\nexport default Todoitem;\n","import { connect } from 'react-redux';\nimport TodoItem from './TodoItem';\nimport { deleteTodo, editTextTodo, selectTodo } from '../../store/index';\n\nconst mapMethodsToProps = dispatch => ({\n    deleteTodo: (todoId) => dispatch(deleteTodo(todoId)),\n    editTextTodo: (editText, id) => dispatch(editTextTodo(editText, id)),\n    selectTodo: (id, checked) => dispatch(selectTodo(id, checked)),\n});\n\nconst connectedTodoItem = connect (null, mapMethodsToProps)(TodoItem);\n\nexport {\n    connectedTodoItem as TodoItem\n}","import React from 'react';\nimport './TodoList.css'\nimport { TodoItem } from '../TodoItem/index';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Avatar from '@material-ui/core/Avatar';\nimport Grid from '@material-ui/core/Grid';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nclass TodosUser extends React.Component {\n    state = {\n        todo: '',\n        currentIndex: 0,\n        hasError: false,\n        userLoginForshare: '',\n    };\n\n    componentDidUpdate\n\n    handleChange = ({ target }) => {\n        const { value } = target;\n\n        this.setState({\n            todo: value.trimLeft(),\n        });\n    }\n\n    handleSubmit = event => {\n        event.preventDefault();\n        const { todo, currentIndex } = this.state;\n        const { addTodo } = this.props;\n        if (todo === '') {\n            this.setState({\n                hasError: true,\n            });\n        } else {\n            const rand = Math.random();\n            const newTodo = {\n                todoTitle: todo,\n                id: currentIndex + rand,\n                selected: false,\n            };\n            this.setState(prevState => ({\n                todo: '',\n                currentIndex: prevState.currentIndex + 1,\n                hasError: false,\n            }));\n\n\n            addTodo(newTodo);\n        }\n    }\n\n    handeleSelect = ({ target }) => {\n        const { value } = target;\n\n        this.setState({\n            userLoginForshare: value,\n        })\n    };\n\n    share = () => {\n        const { userLoginForshare } = this.state;\n        const { currentUser, shareTodo, unselectTodo } = this.props;\n        const todo = [...currentUser.todos].filter(todo => todo.selected === true);\n        console.log(todo);\n        shareTodo(userLoginForshare, todo, currentUser.login);\n        unselectTodo();\n    }\n\n    render() {\n        const { todo, hasError, userLoginForshare } = this.state;\n        const { currentUser, users } = this.props;\n        console.log(todo)\n        console.log(currentUser)\n        const prepereUsers = [...users].filter(user => user.login !== currentUser.login)\n\n        let viewshare = {};\n        if (currentUser.todos.some(todo => todo.selected === true)) {\n            viewshare = {\n                display: 'flex',\n                justifyContent: 'space-evenly',\n                maxWidth: 600,\n                marginLeft: 'auto',\n                marginRight: 'auto',\n            }\n        } else {\n            viewshare.display = \"none\";\n        }\n\n        return (\n            <>\n                <div className=\"user-card\">\n                    <Card>\n                        <CardContent>\n                            <Grid container justify=\"center\" alignItems=\"center\">\n                                <Avatar\n                                    alt=\"me\"\n                                    src=\"https://66.media.tumblr.com/baea33b98e5aa66abd0e5da888d06c44/tumblr_pkw4y0EZTh1uk7v3v_540.jpg\"\n                                    style={{ margin: 10, width: 200, height: 200 }} />\n                            </Grid>\n                            <Typography color=\"textSecondary\" gutterBottom>\n                                Name: {currentUser.name}\n                            </Typography>\n                            <Typography color=\"textSecondary\">\n                                Login: {currentUser.login}\n                            </Typography>\n                        </CardContent>\n                    </Card>\n                </div>\n                <form\n                    onSubmit={(event) => this.handleSubmit(event)}\n                    className=\"add-task-form\"\n                >\n                    <TextField\n                        style={{ margin: 0 }}\n                        id=\"standard-name\"\n                        label=\"Task\"\n                        value={todo}\n                        onChange={this.handleChange}\n                        margin=\"normal\"\n                    />\n                    <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n                        Add\n                    </Button>\n                    {hasError && (\n                        <smal>Enter task</smal>\n                    )}\n                </form>\n                <ul>\n                    {currentUser.todos.map(todo => <TodoItem key={todo.id} todo={todo} selected={todo.selected} />)}\n                </ul>\n                <div style={viewshare}>\n                    <span>Choose whom to share</span>\n                    <FormControl style={{ width: 150 }}>\n                        <Select\n                            value={userLoginForshare}\n                            onChange={this.handeleSelect}\n                        >\n                            {prepereUsers.map(item => <MenuItem value={item.login}>{item.login}</MenuItem>)}\n                        </Select>\n                    </FormControl>\n                    <Button variant=\"contained\" color=\"primary\" disabled={!userLoginForshare} onClick={this.share}>\n                        Share\n                     </Button>\n                </div>\n            </>\n        )\n    }\n}\n\nexport default TodosUser;","import { connect } from 'react-redux';\nimport TodoList from './TodoList';\nimport { addTodo, shareTodo, unselectTodo } from '../../store/index';\n\nconst mapStateToProps = state => ({\n    currentUser: state.currentUser,\n    users: state.users,\n});\n\nconst mapMethodsToProps = dispatch => ({\n    addTodo: (todo) => dispatch(addTodo(todo)),\n    shareTodo: (login, todo, fromUser) => dispatch(shareTodo(login, todo, fromUser)),\n    unselectTodo: () => dispatch(unselectTodo())\n});\n\nconst connectedTodosUser = connect (mapStateToProps, mapMethodsToProps)(TodoList);\n\nexport {\n    connectedTodosUser as TodoList\n}","import React from 'react';\nimport { Route, Link, BrowserRouter, Switch } from 'react-router-dom';\nimport './App.css';\nimport { RegistrationForm } from '../RegistrationForm/index';\nimport { LoginForm } from '../LoginForm/index';\nimport { TodoList } from '../TodoList/index';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nclass App extends React.Component {\n\n  render() {\n    const { handelLogin, handleLogout,  isLogged } = this.props;\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <div>\n              <AppBar position=\"static\">\n                <Toolbar className=\"nav-bar\">\n                  <Typography variant=\"h6\" >\n                    Task manager\n                  </Typography>\n                 {! isLogged && (\n                    <div>\n                    <Link to=\"/login\" style={{ textDecoration: 'none', color: 'white' }}><Button color=\"inherit\">Login</Button></Link>\n                    <Link to=\"/registration\" style={{ textDecoration: 'none', color: 'white' }}><Button color=\"inherit\">Registration</Button></Link>\n                    </div>\n                 )}\n                 { isLogged && (\n                   <div>\n                     <Link to=\"/login\" style={{ textDecoration: 'none', color: 'white' }} onClick={handleLogout}><Button color=\"inherit\">Logout</Button></Link>\n                   </div>\n                 )}\n                </Toolbar>\n              </AppBar>\n            </div>\n          </header>\n          <main>\n          <Switch>\n              <Route path=\"/login\" render={(match) => <LoginForm match={match} handelLogin={handelLogin}/>} />\n              <Route path=\"/registration\" component={RegistrationForm} />\n          </Switch>\n            <Route path=\"/user/:login\" component={TodoList} />\n          </main>\n          <footer className=\"App-footer\"/>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","import { connect } from 'react-redux';\nimport App from './App';\nimport { handleLogout } from '../../store/index';\n\nconst mapMethodsToProps = dispatch => ({\n    handleLogout: () => dispatch(handleLogout()),\n});\n\nconst mapStateToProps = state => ({\n     isLogged: state.isLogged,\n});\n\nconst connetedApp = connect(mapStateToProps, mapMethodsToProps)(App)\n\nexport {\n    connetedApp as App\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store/index';\nimport './index.css';\nimport { App } from './Components/App/index';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Provider store={store} >\n        <App />\n    </Provider>, \n    document.getElementById('root')\n    );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}